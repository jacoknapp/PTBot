name: ci

on:
  push:
    branches: [ "**" ]
    tags:     [ "v*" ]

permissions:
  contents: read
  packages: write

jobs:
  go-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true

      - name: Prepare dependencies
        run: |
          go mod tidy
          go mod download
          go get -u ./...

      - name: Vet
        run: go vet ./...

      - name: Build
        run: go build -v ./...

      - name: Test
        run: |
          if find . -name '*_test.go' | grep -q .; then
            go test ./...
          else
            echo "No tests found; skipping."
          fi

  build-and-push:
    needs: go-validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to git
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASS }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}
            ghcr.io/${{ vars.IMAGE_NAME }}
          tags: |
            type=sha,prefix=sha-,format=short
            type=ref,event=tag
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to external GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}




